Kata1
ImperativeVsDeclarativeExample1.java
- Cual es una de las ventajas de los streams? y como se tendría que hacer para cuando se trabaje con forma declarativa
- Hacer la suma acumulada del 0 al 100 de forma declarativa
- Hacer la suma de forma imperativa

Kata2
ImperativeVsDeclarativeExample2.java
De la siguiente lista remover los duplicados de forma declarativa e imperativa
List<Integer> integerList =Arrays.asList(1,2,3,4,4,5,5,6,7,7,8,9,9);

###################################################################
Lambdas and Functional Interfaces
com.learnJava.functionalInterfaces
###################################################################

Kata3 [A_ConsumerExample] => https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10515332#overview
Cual es la caracteristica de un Consumer
Hacer un Consumer que imprima un valor en upper case

=> Hacer que con un forEach imprimar la lista de los estudiantes (dado que ya se tiene implementado en toString de cada estudiante -> StudentDataBase.getAllStudents()
=> Hacer que se ejecute primer un consumer para imprimir el nombre en mayusculas y después que imprima las actividades
=> Hacer un filtrado que unicamente despliegue los alumnos con gradeLevel = 4 y gpa = 3.9 (solamente usando consumer)
Que es hacer consumer chaining?
Que es una interfaz funcional y da 4 ejemplos (+ su firma)
Cuales son Primary interfaces      y sus correspondientes      Extensions (hay 3 para uno de esos ejemplos)




Kata4 [B_BiConsumerExample] => https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10525390#overview
Cual es el metodo que ejecuta un BiConsumer
Caracteristica del porque se llama Bi, como confirmar este hecho
Hacer un Biconsumer que imprima el nombre y las actividades de estudiantes (a pesar que este ejercicio es repetido con la kata anterior, hacerlo de todas formas con un biconsumer)
Concatenar operaciones que muestren en consola los resultados de sumar dividir y mulitplicar

Que esta mal de la siguiente instrucción:
static BiConsumer<int,int> suma = (n1,n2)-> System.out.println(n1+n2);

Dos metodos de Consumer y BiConsumer (ver implementaciones del JDK si es necesario)



Kata5 [C_PredicateExample] (se repite con la kata 7)
Cual es el signature de un Predicate
Cual es el metodo que ejecuta un predicate
Hacer el ejercicio con s.getGpa() >= 4 ó s.getNoteBooks() >= 15  ... Hacer un Biconsumer que imprima el nombre y las actividades de estudiantes
Cuales son los metodos default de un Predicate (3 como minimo)... usar cada uno de ellos


Kata6 [D_PredicateStudentExample ignorar -> Function<Integer,Predicate<Integer>>]
Hacer un mismo filtrado usando .forEach() y .filter() con un predicate de esta lista StudentDataBase.getAllStudents() que la condición sea que gpa >= 3.9 (Imprimir solo la versión toString)  [Imprimir el objeto de la lista con filter y el nombre del estudiante en el forEach]
Con filter traer todos los registors sin biConsumer, simplemente la lista filtrada
Revisar la duda de como funciona Function

Kata7 [E_PredicateAndConsumerExample]
Hacer dos Predicates:
- getGradeLevel()>=3
- s.getGpa()>=3.9
Hacer un biConsumer para que pueda imprimir --> name + " : " + activities
=> [Usando el BiConsumer anterior] Hacer un consumer con los dos predicates y si se cumple la condición hacer uso del biConsumer, crear metodo para desplegar la información

Kata8 [F_BiPredicateExample]
Hacer con biPredictate y consumer ... solo que en el consumer tenga el biPredicate(forEach, como en E_]:
- getGradeLevel()>=3
- s.getGpa()>=3.9

Kata9 [G_FunctionExample + I_FunctionStudentExample + H_FunctionExample1 (IGNORAR) + D_PredicateStudentExample (Function<Integer,Predicate<Integer>>)]
=> G_FunctionExample
        Cuales son los dos metodos default (y el metodo abstracto de Function)?
=> I_FunctionStudentExample
        Hacer una lista de estudiantes y regresa un mapa con su nombre y GPA cuyo getGradeLevel()>=3
        Distinción importante del tipo de retorno en Function

Kata10 [J_BiFunctionExample]
Cual es el unico metodo default que tiene BiFunction
Hacer una lista de estudiantes y regresa un mapa con su nombre y GPA cuyo getGradeLevel()>=3 ... pero que el predicate se le pase como parametro


Kata11 [K_UnaryOperatorExample + L_BinaryOperatorExample]
K_UnaryOperatorExample
De que extiende UnaryOperator?
Característica de UnaryOperator

L_BinaryOperatorExample
Hacer una multiplicación de dos numeros
De que extiende BinaryOperator y cual es la caracteristica de los genericos
Cuales son los metodos estaticos


Kata12 [M_SupplierExample]
Cual es la firma de Supplier
usar e imprimir en consola, usar tambien SudentDatabase (hacer 2 suppliers)
new Student("Adam",2,4.0,"male", Arrays.asList("swimming", "basketball","volleyball"))

###################################################################
Method Reference -> [Section 9] -> https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10654424#overview
com.learnJava.methodreferences
###################################################################
Kata13 [A_FunctionMethodReferenceExample]
- Hace dos Function, uno con lambda y otro con Method Reference que recibe un String y regresa el uppercase
- Imprimir en consola (usando ambos)
- Hacer el ejercicio de convertir un lambda a method reference


Kata14 [B_ConsumerMethodReferenceExample]
Fuente: https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10667460#overview
- Hacer un Consumer con Method Reference que imprima los objetos (implementacion del toString) => StudentDataBase.getAllStudents()
- Hacer dos Consumers que imprima printListOfActivities
* Usando lambda
* Usando method reference


Kata15 [C_RefactorMethodReferenceExample]
... al final de esta kata se deben tener 3 sout's
- Hacer una combinación de Predicate y Supplier en la que se imprima si la condición s.getGradeLevel()>=3 es verdadera o falsa
Crear el supplier con la siguiente información:
new Student("Adam",2,4.0,"male", Arrays.asList("swimming", "basketball","volleyball"))

- Hacer uso de MethodReference del caso anterior
- Hacer uso de MethodReference pero con BiPredicate

Kata16 [D_SupplierMethodReferenceExample]
Que estaría mal al usar Constructor Reference? y cual es el requerimiento para poder usar?
Mandar llamar el constructor de Student para que mande llamar Hello World

Usar constructor reference con el constructor que setea el nombre del Student


###################################################################
Lambdas and local variables -> [Section 10] ->
https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10670742#overview
com.learnJava.lambda
###################################################################
Kata17 [A_LambdaVariable1 + B_LambdaVariable2]
- Dos restricciones de variables
- Que es effectively final? y porque se hace esto de manejarse como final (2 razones)?

###################################################################
Collections -> [Section 11] ->
https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10735934#overview
com.learnJava.streams
###################################################################

Kata18 [A_StreamsExample + A1_CollectionsvsStreams]
Usando streams
CASO1
De la lista getAllStudents().stream() meter los nombres y la lista de actividades en un Map cuyo getGradeLevel()>=3 y student.getGpa()>=3.9; [No usar if]
Hacer lo anterior de forma paralela

[Sección] TODO - Teoria
Cuales son las 5 diferencias entre collections y Streams

Caso3
Como depurar un stream y que acepta?
Cual es la principal idea de usar lo anterior


Kata19 [B_StreamsMapExample]
para que se usa map? (No confundir con Map)
1) Hacer un metodo que regrese un List<String> y que regrese cada elemento en uppercase -- namesUpperCase(StudentDataBase.getAllStudents())
2) Hacer el ejercicio anterior pero con Set
- 2 tipos de collectors (Cuales otros hay? [Investigar])

Kata20 [C_StreamFlatMapExample]
Como se comporta un flatMap y dos ejemplos del tipo de datos con los que se trabaja y cual es una consideración a tomar en cuenta
Imprimir toda la lista de activities, identificar que es lo que regresa en cada etapa del stream (a partir de .stream())

Dar 3 ejemplos de funciones de la api de streams
Hacer el ejemplo anterior pero que los valores sean unicos y ordenados



Kata21 [D_StreamsComparatorExample]
Usando sorted...
De la lista StudentDataBase.getAllStudents().
- Ordenar por nombre
- Por GPA
- Por GPA Higher to lower

Hacerlo con lambdas y por Method Reference


Kata22 [E_StreamsFilterExample]
Usando filter con getGpa()>=3.9 y gender="female" e imprimir cada uno de los resultados con un forEach (implementación del toString de todos los objetos de la lista)

Kata23 [F_StreamReduceExample] => https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10837904#overview
Que tipo de operación es reduce
Cuantos parametros recibe reduce y cual es el principal objetivo
- [A] Hacer una multiplicación de los siguientes números 1,3,5,7 y explicar funcionamiento [A]
- [B]
    - Que es lo que regresa si no tiene un identity value?
    - Hacer el ejercicio anterior pero sin el primer valor (identity)
- [C] Hacer un metodo para obtener el Grade mas alto getHighestGradeStudent()
- [D] Concatenar el nombre de todos los estudiantes


Kata24 [G_StreamsFilterMapReduceExample]
Obtener el total de notebooks de la colección
Hacer lo anterior pero filtrando por genero


Kata25 [H_StreamsMaxMinExample] => Fuente: https://www.udemy.com/course/modern-java-learn-java-8-features-by-coding-it/learn/lecture/10909222?start=15#overview
Hacer un metodo que regresa el valor maximo de una lista regresando un int y un Optional
- que pasaría si en lugar de optional regresa un int
Hacer el punto anterior pero con un reduce

Hacer lo mismo pero con el minimo


Kata26 [I_StreamsLimitSkipExample]
Que ayudan a crear limit y skip? como se comportan y crear 2 metodos para usarlos

Kata27
Que recibe anyMatch, allMatch, nonMatch

Video 48 sin ver - findAny, findFirst


11/19 [Katas]
Kata1.- se me olvido el metodo para la generación de numeros (.rangeClosed)
Kata2.- ok
Kata3.- Se me olvido los subtipos
8:53 - 914
